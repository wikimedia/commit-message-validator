[tox]
min_version = 4.0
envlist =
    lint
    py311
    py310
    py39
    py38
    py37
    pkg_meta
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = run the tests with pytest under {envname}
deps =
    pytest
    pytest-cov
commands =
    pytest

[testenv:lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
base_python = py311
deps =
    pre-commit>=3.2
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs}
    python -c 'print(r"hint: run {envbindir}{/}pre-commit install to add checks as pre-commit hook")'

[testenv:pkg_meta]
description = check that generated packages are valid
base_python = py311
skip_install = true
deps =
    build[virtualenv]>=0.10
    check-wheel-contents>=0.4
    twine>=4.0.2
commands =
    python3 -m build --outdir {envtmpdir} --sdist --wheel .
    twine check --strict {envtmpdir}{/}*
    check-wheel-contents {envtmpdir}

[testenv:sample]
base_python = py311
deps =
commands =
    commit-message-validator sample {posargs}

[flake8]
exclude = .tox
max_line_length = 120

[pytest]
addopts =
    --doctest-modules
    --verbosity=2
    --cov=commit_message_validator
    --cov-report=term
    --cov-report=html
    --cov-report=xml

[coverage:run]
branch = True
omit =
    **/__main__.py

[coverage:report]
show_missing = True
skip_empty = True

[coverage:html]
directory = dist/htmlcov

[coverage:xml]
output = dist/coverage.xml

[check-wheel-contents]
ignore =
    W002,
